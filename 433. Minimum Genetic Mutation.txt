from collections import deque

class Solution:
    def minMutation(self, startGene: str, endGene: str, bank: list[str]) -> int:
        bank_set = set(bank)
        if endGene not in bank_set: 
            return -1

        queue = deque([(startGene, 0)]) 
        possible_chars = ['A', 'C', 'G', 'T']

        while queue:
            current_gene, mutations = queue.popleft()

            if current_gene == endGene:  
                return mutations

            for i in range(len(current_gene)):
                for char in possible_chars:
                    if char != current_gene[i]:  
                        mutated_gene = current_gene[:i] + char + current_gene[i + 1:]
                        if mutated_gene in bank_set:
                            queue.append((mutated_gene, mutations + 1))
                            bank_set.remove(mutated_gene)  

        return -1  